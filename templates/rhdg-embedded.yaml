apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhdg8-embedded
  annotations:
    description: Template to deploy a Java client application with an embedded RHDG cluster on OCP.
    tags: infinispan,datagrid,java,springboot, embedded
    iconClass: icon-rh-openjdk
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
labels:
  template: rhdg8-embedded
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    lookupPolicy:
      local: true
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      statefulset: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Provides a ping service for clustered applications.
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-ping
  spec:
    clusterIP: None
    ports:
      - name: ping
        protocol: TCP
        port: 8888
        targetPort: 8888
    selector:
      app: ${APPLICATION_NAME}
      statefulset: ${APPLICATION_NAME}
    type: ClusterIP
    sessionAffinity: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    to:
      kind: Service
      name: ${APPLICATION_NAME}
    port:
      targetPort: 8080
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}
#    serviceName: ${APPLICATION_NAME}
    template:
      metadata:
        name: ${APPLICATION_NAME}
        labels:
          app: ${APPLICATION_NAME}
          statefulset: ${APPLICATION_NAME}
      spec:
        containers:
          - name: ${APPLICATION_NAME}
            image: ${APPLICATION_NAME}:latest
            imagePullPolicy: Always
            env:
              - name: JAVA_OPTIONS
                value: "-Djgroups.dns.query=${APPLICATION_NAME}-ping"
            ports:
              - name: restapi
                containerPort: 8080
                protocol: TCP
              - name: ping
                containerPort: 8888
                protocol: TCP
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}Mi
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}Mi
            volumeMounts:
              - name: app-config
                mountPath: "${MOUNT_PATH}"
        volumes:
          - name: app-config
            configMap:
              name: ${APPLICATION_NAME}-config
    updateStrategy:
      type: RollingUpdate
#    triggers:
#      - type: ConfigChange
#      - type: ImageChange
#        imageChangeParams:
#          automatic: true
#          containerNames:
#            - ${APPLICATION_NAME}
#          from:
#            kind: ImageStreamTag
#            name: ${APPLICATION_NAME}:latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    nodeSelector:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: ${GIT_REPOSITORY}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ubi8-openjdk-11:1.3
          namespace: openshift
      type: Source
    failedBuildsHistoryLimit: 5
    successfulBuildsHistoryLimit: 5
    triggers:
      - type: ConfigChange
      - type: ImageChange
parameters:
  - name: APPLICATION_NAME
    description: "The name of the application."
    required: true
  - name: APP_NAMESPACE
    description: "The namespace of the application."
    required: true
  - name: MOUNT_PATH
    description: "The path where the configuration file of the application is mounted."
    value: "/deployments/config"
    required: true
  - name: GIT_REPOSITORY
    description: "The git repository of the application."
    required: true
  - description: Sets the initial memory request in Mi for the application.
    displayName: Memory Request
    name: MEMORY_REQUEST
    value: "512"
  - description: Sets the memory limit in Mi, available to the application.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    value: "2048"
  - description: Sets the initial CPU request for the application.
    displayName: CPU Request
    name: CPU_REQUEST
    value: "0.5"
  - description: Sets the CPU limit, available to the application.
    displayName: CPU Limit
    name: CPU_LIMIT
    value: "2.0"
